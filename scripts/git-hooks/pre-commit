#!/usr/bin/env bash

# Lista dei file php modifica
PHP_STAGED_FILES=$(git diff --name-only --cached --diff-filter=ACMR -- '*.php' | sed 's| |\\ |g')

# Se ci sono file php modificati...
if [[ -n "$PHP_STAGED_FILES" ]]; then

    # Formattazione del codice con PHP CS Fixer
    ./dc php-cs-fixer-fix $PHP_STAGED_FILES --show-progress=dots --dry-run
    STATUS=$?

    if [[ "$STATUS" -eq 0 ]]; then
        echo ""
        echo -e "\e[42mCode style is OK\e[m"
    else
        while true; do
            echo -e "\e[41mInvalid code style\e[m"
            read -p $'\e[31mDo you really want to commit ignoring code style warnings? y/n/f[Fix] \e[0m: ' yn < /dev/tty
            case $yn in
                [Yy]* ) echo ""; echo "Please consider fixing code style"; break;;
                [Nn]* ) echo "Run './dc php-cs-fixer-fix \$(git diff --name-only --cached --diff-filter=ACMR -- '*.php') --show-progress=dots' to fix"; exit 1;;
                [Ff]* ) ./dc php-cs-fixer-fix $(git diff --name-only --cached --diff-filter=ACMR -- '*.php') --show-progress=dots; break;;
                * ) echo "Please answer y, n or f.";;
            esac
        done
    fi

    # Analisi statica del codice con Psalm
    ./dc psalm --no-cache
    STATUS=$?

    if [[ "$STATUS" -eq 0 ]]; then
        echo -e "\e[42mPHP Static Analysis is OK\e[m"

        ./dc badge "static analysis" passed psalm

    else
        while true; do
            read -p $'\e[31mDo you really want to commit ignoring psalm errors? y/n \e[0m: ' yn < /dev/tty
            case $yn in
                #[Yy]* ) exit 0; break;; # Si commit
                [Yy]* ) echo ""; echo "Please consider fixing psalm errors"; break;;
                [Nn]* ) exit 1;; # No commit
                * ) echo "Please answer y or n.";;
            esac
        done
    fi

    # Esecuzione dei test con phpunit
    ./dc phpunit --colors=always --testdox --exclude-group learning
    STATUS=$?

    if [[ "$STATUS" -eq 0 ]]; then
        echo -e "\e[42mPHP Unit Tests Suite is OK\e[m"

        ./dc badge test passed phpunit

    else
        echo "Pay attention! Unit Tests are broken."
        exit 1
    fi

else
    echo -e "\e[42mNo PHP staged files.\e[m"
    exit 0
fi

